{
  "name": "Deenji Real Estate Platform",
  "version": "1.0.0",
  "system_prompt": "You are assisting with Deenji, a real estate platform enhanced with LLMs that connects property buyers and agents. The platform offers powerful search tools, detailed property insights, and investment analytics. It's built with AnalogJS (Angular meta-framework), Supabase for authentication and data storage, and tRPC for type-safe API communication. The platform supports multilingual interfaces with Persian/Farsi as the default language (RTL layout). You have deep knowledge of Elasticsearch implementation patterns, real estate search requirements, and the specific technologies used in this project.",
  "vars": {
    "tech_stack": "AnalogJS, Supabase, tRPC, TailwindCSS, Spartan UI, Elasticsearch, MapBox/Neshan, Recharts",
    "default_lang": "Persian/Farsi with RTL layout",
    "project_name": "Deenji",
    "search_tech": "Elasticsearch with completion suggesters, search-as-you-type, and aggregation-based suggestions",
    "backend_api": "tRPC with type-safe search endpoints",
    "frontend_ui": "Angular components with Spartan UI and reactive search"
  },
  "groups": [
    {
      "name": "Search Architecture & Requirements",
      "system_prompt": "This group contains the search implementation requirements and architecture decisions for ${project_name}. The search system uses ${search_tech} to provide property discovery with completion suggesters, search-as-you-type, geospatial queries, and multilingual support for ${default_lang}. Focus on the technical requirements, user experience patterns, and integration with the existing ${tech_stack}. This includes advanced Elasticsearch features like completion suggestions, search-as-you-type fields, and dynamic aggregation-based suggestions.",
      "data": [
        "search_requirements",
        "elasticsearch_architecture",
        "search_compilation"
      ]
    },
    {
      "name": "Search Backend Implementation",
      "system_prompt": "This group focuses on the backend search implementation using ${backend_api}. It includes Elasticsearch integration with completion suggesters, search-as-you-type queries, aggregation-based dynamic suggestions, and tRPC endpoints for search operations. The implementation handles Persian/Arabic text search, geospatial queries, and complex property filtering with multi-stage suggestion flow.",
      "data": [
        "trpc_search_routes",
        "elasticsearch_service",
        "search_indexing",
        "property_mapping",
        "search_types",
        "suggestion_service"
      ]
    },
    {
      "name": "Search Testing & Performance",
      "system_prompt": "This group includes comprehensive testing strategies for advanced search functionality including completion suggesters, search-as-you-type, and aggregation-based suggestions. It covers Vitest integration tests, performance optimization techniques, and monitoring search queries with Persian text support.",
      "data": [
        "search_tests",
        "performance_config",
        "search_analytics",
        "suggester_tests"
      ]
    },
    {
      "name": "Complete Search Implementation",
      "system_prompt": "Complete context for implementing the full search system with all advanced Elasticsearch features. Includes requirements, architecture, backend implementation, and comprehensive testing for completion suggesters, search-as-you-type, and multi-stage search flow.",
      "data": [
        "search_requirements",
        "elasticsearch_architecture",
        "implementation_guide",
        "trpc_search_routes",
        "elasticsearch_service",
        "suggestion_service",
        "search_tests"
      ]
    }
  ],
  "data": {
    "search_requirements": {
      "type": "file",
      "path": "docs/search/requirements.md",
      "description": "Multi-stage search requirements for property type → bedrooms → price flow with Persian text support"
    },
    "elasticsearch_architecture": {
      "type": "file",
      "path": "docs/search/elasticsearch-architecture.md",
      "description": "Advanced Elasticsearch architecture with completion suggesters, search-as-you-type, Persian analyzers, and aggregation-based suggestions"
    },
    "implementation_guide": {
      "type": "file",
      "path": "docs/search/implementation-guide.md",
      "description": "Complete implementation guide with tRPC routes, suggestion services, search-as-you-type, and comprehensive Vitest testing"
    },
    "trpc_search_routes": {
      "type": "file",
      "path": "deenji/src/server/api/routers/search.ts",
      "description": "tRPC router with completion suggester endpoints, search-as-you-type queries, and multi-stage search flow"
    },
    "elasticsearch_service": {
      "type": "file",
      "path": "deenji/src/server/services/elasticsearch.service.ts",
      "description": "Core Elasticsearch service with completion suggestions, search-as-you-type, and Persian text analysis"
    },
    "suggestion_service": {
      "type": "file",
      "path": "deenji/src/server/services/suggestion.service.ts",
      "description": "Advanced suggestion service implementing completion suggestions, dynamic price suggestions, and context-aware bedroom suggestions"
    },
    "search_indexing": {
      "type": "file",
      "path": "deenji/src/server/services/search-indexing.service.ts",
      "description": "Service for indexing property data with completion suggester documents and search-as-you-type fields"
    },
    "property_mapping": {
      "type": "file",
      "path": "deenji/src/server/mappings/property.mapping.ts",
      "description": "Elasticsearch mapping with completion fields, search-as-you-type configurations, and Persian analyzers"
    },
    "search_types": {
      "type": "file",
      "path": "deenji/src/shared/types/search.types.ts",
      "description": "TypeScript types for completion suggestions, search-as-you-type, and multi-stage search requests/responses"
    },
    "search_tests": {
      "type": "file",
      "path": "deenji/src/server/api/routers/__tests__/search.test.ts",
      "description": "Comprehensive Vitest test suite for multi-stage search, completion suggesters, and search-as-you-type"
    },
    "suggester_tests": {
      "type": "file",
      "path": "deenji/src/server/services/__tests__/suggestion.test.ts",
      "description": "Dedicated tests for completion suggester functionality, context-aware suggestions, and dynamic price suggestions"
    },
    "performance_config": {
      "type": "file",
      "path": "deenji/src/server/config/elasticsearch.config.ts",
      "description": "Elasticsearch performance configuration optimized for completion suggesters and search-as-you-type queries"
    },
    "search_analytics": {
      "type": "file",
      "path": "deenji/src/server/services/search-analytics.service.ts",
      "description": "Analytics service for tracking suggester performance, search-as-you-type usage, and Persian text search metrics"
    }
  }
}
