name: Deploy Deenji

on:
  push:
    branches:
      - main # Deploys to staging
      - production # Deploys to production

jobs:
  deploy:
    runs-on: ubuntu-latest
    # Automatically select environment based on branch
    environment: ${{ github.ref == 'refs/heads/production' && 'production' || 'staging' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set environment variables
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/production" ]]; then
            echo "DEPLOY_ENV=production" >> $GITHUB_ENV
            echo "DEPLOY_HOST=${{ secrets.PROD_VPS_HOST || secrets.VPS_HOST }}" >> $GITHUB_ENV
            echo "APP_URL=https://yourdomain.com" >> $GITHUB_ENV
            echo "SUPABASE_URL=https://api.yourdomain.com" >> $GITHUB_ENV
          else
            echo "DEPLOY_ENV=staging" >> $GITHUB_ENV
            echo "DEPLOY_HOST=${{ secrets.VPS_HOST }}" >> $GITHUB_ENV
            echo "APP_URL=https://demo.dunup.ch" >> $GITHUB_ENV
            echo "SUPABASE_URL=http://localhost:54321" >> $GITHUB_ENV
          fi

      - name: Deploy to VPS
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ env.DEPLOY_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            # Navigate to project directory
            cd ~/deenji-project

            # Stop Caddy if running (for port 8081)
            sudo systemctl stop caddy || true

            # Pull latest code from appropriate branch
            git pull origin ${{ github.ref_name }}

            # Create .env file with environment-specific values
            cat > .env << 'EOF'
            # Environment configuration
            VITE_production=${{ env.DEPLOY_ENV == 'production' && 'true' || 'false' }}
            VITE_supabaseUrl=${{ env.SUPABASE_URL }}
            baseUrl=${{ env.APP_URL }}

            # Elasticsearch URL (will be overridden by docker-compose for internal network)
            VITE_ELASTICSEARCH_URL=http://localhost:9200

            # Secrets from GitHub Environment
            VITE_supabaseKey=${{ secrets.SUPABASE_ANON_KEY }}
            DATABASE_URL=${{ secrets.DATABASE_URL }}
            VITE_GOOGLE_API_KEY=${{ secrets.GOOGLE_API_KEY }}
            VITE_googleMapsApiKey=${{ secrets.GOOGLE_API_KEY }}
            VITE_GOOGLE_MAPS_API_KEY=${{ secrets.GOOGLE_API_KEY }}
            EOF

            # Stop existing containers
            docker compose down

            # Build with no cache for fresh build
            docker compose build --no-cache deenji-app

            # Start all services
            docker compose up -d

            # Wait for services to be healthy
            sleep 10

            # Check if services are running
            docker compose ps

            # Clean up old images
            docker image prune -f

            # Show logs for debugging
            echo "=== Recent logs ==="
            docker compose logs --tail=50 deenji-app
